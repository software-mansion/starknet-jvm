name: Checks
on:
  pull_request:
  push:
    branches:
      - main

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  test_and_lint:
    strategy:
      matrix:
        os: [
          "macos-latest",
          "ubuntu-20.04"
        ]

    runs-on: ${{ matrix.os }}
    env:
      DEVNET_SHA: fc5a2753a2eedcc27eed7a4fae3ecac08c2ca1b4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@802fa1a2c4e212495c05bf94dba2704a92a472be
        with:
          cmake-version: '3.18.1'

      # TODO: Replace with installing release when release is available
      - name: Clone starknet-devnet-rs
        run: |
          git clone https://github.com/0xSpaceShard/starknet-devnet-rs.git starknet-devnet-rs
          pushd ${{ github.workspace }}/starknet-devnet-rs
          git checkout ${{ env.DEVNET_SHA }}
          popd

      - name: Cache devnet build
        uses: actions/cache@v4
        with:
          path: starknet-devnet-rs/target/release
          key: ${{ runner.os }}-starknet-devnet-rs-target-release-${{ env.DEVNET_SHA }}

      - name: Build devnet
        run: |
          if [[ ! -d ${{ github.workspace }}/starknet-devnet-rs/target/release ]]; then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            pushd ${{ github.workspace }}/starknet-devnet-rs
            cargo build --release
            popd
          else
            echo "Found existing starknet-devnet-rs build, skipping compilation."
          fi

      # TODO(#539)
      - name: Fetch latest asdf version from GitHub releases
        id: asdf_version
        run: |
          latest_version=$(curl -sS --fail -H "Authorization: Bearer $GH_TOKEN" https://api.github.com/repos/asdf-vm/asdf/releases/latest | grep \"tag_name\": | awk '{print $2}' | tr -d 'v",')
          echo "Latest asdf version found is $latest_version"
          echo "LATEST=$latest_version" >> $GITHUB_ENV
      - name: Setup asdf
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            ASDF_PLATFORM="linux-amd64"
          else
            ASDF_PLATFORM="darwin-arm64"
          fi
          mkdir -p "$HOME/.local/bin"
          DOWNLOAD_URL="https://github.com/asdf-vm/asdf/releases/download/v${LATEST}/asdf-v${LATEST}-${ASDF_PLATFORM}.tar.gz"
          echo "Downloading asdf from $DOWNLOAD_URL"
          curl -fsSL "$DOWNLOAD_URL" | tar xzf - -C "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "${ASDF_DATA_DIR:-$HOME/.asdf}/shims" >> $GITHUB_PATH

      - name: Install starknet-foundry
        run: |
          asdf plugin add starknet-foundry
          asdf install starknet-foundry 0.40.0
          asdf set starknet-foundry 0.40.0 --home

      - name: Install scarb
        run: |
          asdf plugin add scarb
          asdf install scarb 0.4.0
          asdf install scarb 0.7.0
          asdf install scarb 2.6.0

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: Lint
        run: ./gradlew :lib:lintKotlin

      - name: Check guides
        run: |
          ./gradlew :lib:generateGuides
          if ! git diff --exit-code lib/*.md; then
            echo "Error: Guides are not up-to-date. Please run './gradlew :lib:generateGuides' and commit the changes."

            exit 1
          else
            echo "Guides are up-to-date"
          fi

      - name: Run tests and generate coverage report
        env:
          DEVNET_PATH: ${{ github.workspace }}/starknet-devnet-rs/target/release/starknet-devnet
          NETWORK_TEST_MODE: "disabled"
        run: ./gradlew :lib:koverXmlReport --info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70
        with:
          files: lib/build/reports/kover/report.xml
