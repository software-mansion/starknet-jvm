name: Checks
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test_and_lint:
    strategy:
      matrix:
        os: [
          "macos-latest",
          "ubuntu-20.04"
        ]

    runs-on: ${{ matrix.os }}
    # TODO: (#310) Remove when migrating to macOS arm64 runner
    env:
      V2_COMPILER_BUILD_PATH: ${{ github.workspace }}/cairo2/target/release
      DEVNET_SHA: 74a7bf77291ef0365d35cb725712c90d25c686c4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@4f73d30c2fc44a9466a3ed890fb8db7a7b554302
        with:
          cmake-version: '3.16.x'

      - name: Setup Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.9.12
          cache: 'pip'

      - name: Install legacy devnet
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # TODO: Replace with installing release when release is available
      - name: Clone starknet-devnet-rs
        run: |
          git clone https://github.com/0xSpaceShard/starknet-devnet-rs.git starknet-devnet-rs
          pushd ${{ github.workspace }}/starknet-devnet-rs
          git checkout ${{ env.DEVNET_SHA }}
          popd

      - name: Cache devnet build
        uses: actions/cache@v3
        with:
          path: starknet-devnet-rs/target/release
          key: ${{ runner.os }}-starknet-devnet-rs-target-release-${{ env.DEVNET_SHA }}

      - name: Build devnet
        run: |
          if [[ ! -d ${{ github.workspace }}/starknet-devnet-rs/target/release ]]; then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            pushd ${{ github.workspace }}/starknet-devnet-rs
            cargo build --release
            popd
          else
            echo "Found existing starknet-devnet-rs build, skipping compilation."
          fi

      - name: Setup asdf
        uses: asdf-vm/actions/setup@v2

      - name: Install sncast 0.6.0
        run: |
          asdf plugin add starknet-foundry
          asdf install starknet-foundry 0.6.0
          asdf global starknet-foundry 0.6.0

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with: 
          cache-read-only: false

      - name: Lint
        run: ./gradlew :lib:lintKotlin

      # TODO: (#345) Remove once legacy devnet is removed or CI migrated to macOS arm64 runner
      - name: Clone Cairo repo (macOS only)
        if: matrix.os == 'macos-latest'
        run: git clone -b v2.2.0 https://github.com/starkware-libs/cairo.git cairo2

      - name: Cache Cairo compiler v2 binaries (macOS only)
        if: matrix.os == 'macos-latest'
        uses: actions/cache@v3
        with:
          path: cairo2/target/release
          key: ${{ runner.os }}-cairo2-target-release-${{ hashFiles('cairo2/Cargo.lock') }}

      - name: Build Cairo compiler binaries (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          if [[ ! -d "$V2_COMPILER_BUILD_PATH" ]]; then
            curl -sSf https://sh.rustup.rs | sh -s -- -y
            pushd ${{ github.workspace }}/cairo2
            cargo build --release
            cargo run --bin starknet-compile -- --version
            cargo run --bin starknet-sierra-compile -- --version
            popd
          else
            echo "Found existing binaries, skipping compilation."
          fi

      - name: Run tests and generate coverage report
        env:
          DEVNET_PATH: ${{ github.workspace }}/starknet-devnet-rs/target/release/starknet-devnet
          NETWORK_TEST_MODE: "non_gas"
          NETWORK_TEST_NETWORK_NAME: "TESTNET"
          TESTNET_RPC_URL: ${{ secrets.TESTNET_RPC_URL }}
          TESTNET_ACCOUNT_ADDRESS: ${{ secrets.TESTNET_ACCOUNT_ADDRESS }}
          TESTNET_PRIVATE_KEY: ${{ secrets.TESTNET_PRIVATE_KEY }}
          TESTNET_CONST_NONCE_ACCOUNT_ADDRESS: ${{ secrets.TESTNET_CONST_NONCE_ACCOUNT_ADDRESS }}
          TESTNET_CONST_NONCE_PRIVATE_KEY: ${{ secrets.TESTNET_CONST_NONCE_PRIVATE_KEY }}
        run: ./gradlew :lib:koverXmlReport --info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70
        with:
          files: lib/build/reports/kover/project-xml/report.xml
