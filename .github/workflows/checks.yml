name: Checks
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test_and_lint:
    strategy:
      matrix:
        os: [
#          "macos-latest",
          "ubuntu-20.04"
        ]

    runs-on: ${{ matrix.os }}
    env:
      DEVNET_SHA: 47ee2a73c227ee356f344ce94e5f61871299be80
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@802fa1a2c4e212495c05bf94dba2704a92a472be
        with:
          cmake-version: '3.18.1'

        # TODO: This is temporary adjustment. It should be revamped once starknet-devnet has a new release
      - name: Clone starknet-devnet-rs
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            ARCHIVE_URL="https://github.com/franciszekjob/starknet-devnet/releases/download/v0.13.4-rc.0/starknet-devnet-x86_64-unknown-linux-gnu.tar.gz"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            ARCHIVE_URL="https://github.com/franciszekjob/starknet-devnet/releases/download/v0.13.4-rc.0/starknet-devnet-aarch64-apple-darwin.tar.gz"
          else
            echo "Unsupported OS: $RUNNER_OS"
            exit 1
          fi

          echo "Downloading $ARCHIVE_URL"
          curl -L -o starknet-devnet.tar.gz "$ARCHIVE_URL"

          echo "Extracting archive..."
          tar -xzvf starknet-devnet.tar.gz

          echo "Moving binary to /usr/local/bin/"
          sudo mv starknet-devnet /usr/local/bin/

          echo "Verifying installation..."
          starknet-devnet --version


#      - name: Cache devnet build
#        uses: actions/cache@v4
#        with:
#          path: starknet-devnet-rs/target/release
#          key: ${{ runner.os }}-starknet-devnet-rs-target-release-${{ env.DEVNET_SHA }}
#
#      - name: Build devnet
#        run: |
#          if [[ ! -d ${{ github.workspace }}/starknet-devnet-rs/target/release ]]; then
#            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
#            pushd ${{ github.workspace }}/starknet-devnet-rs
#            cargo build --release
#            popd
#          else
#            echo "Found existing starknet-devnet-rs build, skipping compilation."
#          fi

      - name: Setup asdf
        uses: asdf-vm/actions/setup@v2

      # TODO: This is temporary adjustment. It should be revamped once sncast supports RPC 0.8.0
      - name: Install starknet-foundry
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            ARCHIVE_URL="https://github.com/franciszekjob/starknet-foundry/releases/download/v0.39.0-rc.0/starknet-foundry-x86_64-unknown-linux-gnu.tar.gz"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            ARCHIVE_URL="https://github.com/franciszekjob/starknet-foundry/releases/download/v0.39.0-rc.0/starknet-foundry-aarch64-apple-darwin.tar.gz"
          else
            echo "Unsupported OS: $RUNNER_OS"
            exit 1
          fi

          echo "Downloading $ARCHIVE_URL"
          curl -L -o starknet-foundry.tar.gz "$ARCHIVE_URL"

          echo "Extracting archive..."
          tar -xzvf starknet-foundry.tar.gz

          echo "Moving binary to /usr/local/bin/"
          sudo mv sncast /usr/local/bin/

          echo "Verifying installation..."
          sncast --version

      - name: Install universal-sierra-compiler
        run: |
          curl -L https://raw.githubusercontent.com/software-mansion/universal-sierra-compiler/master/scripts/install.sh | sh
          universal-sierra-compiler --version
  /Users/franciszekjob/Projects/SWM/starknet-foundry/target/release/sncast --hex-format --json --accounts-file /Users/franciszekjob/.starknet_accounts/starknet_open_zeppelin_accounts.json --account legacy_account account deploy --name ggg --l1-gas 100000 --l2-gas 1000000000 --l1-data-gas 100000 --url http://0.0.0.0:5050/rpc
      - name: Install scarb
        run: |
          asdf plugin add scarb
          asdf install scarb 0.4.0
          asdf install scarb 0.7.0
          asdf install scarb 2.6.0

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: Lint
        run: ./gradlew :lib:lintKotlin

      - name: Check guides
        run: |
          ./gradlew :lib:generateGuides
          if ! git diff --exit-code lib/*.md; then
            echo "Error: Guides are not up-to-date. Please run './gradlew :lib:generateGuides' and commit the changes."

            exit 1
          else
            echo "Guides are up-to-date"
          fi

      - name: Run tests and generate coverage report
        env:
          DEVNET_PATH: ${{ github.workspace }}/starknet-devnet-rs/target/release/starknet-devnet
          NETWORK_TEST_MODE: "disabled"
        run: ./gradlew :lib:koverXmlReport --info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70
        with:
          files: lib/build/reports/kover/report.xml
