name: GitHub Actions Demo
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  Build-platform-specific:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'corretto'
          cache: 'gradle'

      - name: Build platform specific lib
        run: ./gradlew buildCryptoCpp
      - name: Upload the shared lib
        uses: actions/upload-artifact@v2
        with:
          name: lib-${{ runner.os }}
          path: crypto/build/bindings/libcrypto_jni.*

      - name: Build android's AAR
        run: ./gradlew android:build
        if: matrix.os == 'ubuntu-latest'
      - name: Upload the AAR
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: build.aar
          path: android/build/outputs/aar/android-release.aar
  Publish:
    runs-on: ubuntu-latest
    needs: [Build-platform-specific]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: download
      - name: List files in the repository
        run: |
          ls download
      - name: Move shared libs
        run: |
          mkdir -p lib/build/libs/shared/{darwin,linux}/amd64
          # Mac uses a universal binary
          cp -r download/lib-macOS lib/build/libs/shared/darwin/
          # TODO: In the future add more architectures
          cp -r download/lib-Linux lib/build/libs/shared/linux/amd64/
      - name: Bundle universal JAR
        run: ./gradlew lib:jar
      - name: Upload the JAR
        uses: actions/upload-artifact@v2
        with:
          name: build.jar
          path: lib/build/libs/lib-0.0.1.jar