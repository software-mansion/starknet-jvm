name: Build

on:
  push:
    branches: [ feat/gh-build ] # [ main ]

# TODO: In the future add more architectures
env:
  LINUX_ARCHS: "x86_64"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'corretto'
          cache: 'gradle'
      - name: Set arch variable
        id: vars
        run: echo "::set-output name=os_arch::$(uname -m)"

      - name: Build platform specific lib
        run: ./gradlew buildCryptoCpp
      - name: Upload the shared lib
        uses: actions/upload-artifact@v2
        with:
          name: lib-${{ runner.os }}-${{ steps.vars.outputs.os_arch }}
          path: crypto/build/bindings/libcrypto_jni.*

      - name: Build android's AAR
        run: ./gradlew android:build
        if: matrix.os == 'ubuntu-latest'
      - name: Rename AAR
        run: mv android/build/outputs/aar/android-release.aar starknet.aar
        if: matrix.os == 'ubuntu-latest'
      - name: Upload the AAR
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: starknet-aar
          path: starknet.aar

  package_jar:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: download
      - name: Move shared libs
        run: |
          # Mac uses a universal binary
          mkdir -p lib/build/libs/shared/darwin
          cp -r download/lib-macOS*/* lib/build/libs/shared/darwin/
          for arch in "$LINUX_ARCHS"; do
            mkdir -p lib/build/libs/shared/linux/"$arch"
            cp -r download/lib-Linux-"$arch"/* lib/build/libs/shared/linux/"$arch"/
          done
      - name: Bundle universal JAR
        run: ./gradlew lib:jar
      # TODO: Get VERSION from env instead?
      - name: Rename JAR
        run: mv lib/build/libs/lib-0.0.1.jar starknet.jar
      - name: Upload the JAR
        uses: actions/upload-artifact@v2
        with:
          name: starknet-jar
          path: starknet.jar

  generate_javadoc_and_sources:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Generate javadoc JAR
        run: ./gradlew javadocJar
      - name: Generate sources JAR
        run: ./gradlew sourcesJar
      # TODO: Get VERSION from env instead?
      - name: Rename JARS
        run: mv lib/build/libs/lib-0.0.1-javadoc.jar javadoc.jar && mv lib/build/libs/lib-0.0.1-sources.jar sources.jar
      - name: Upload javadoc JAR
        uses: actions/upload-artifact@v2
        with:
          name: javadoc-jar
          path: javadoc.jar
      - name: Upload sources JAR
        uses: actions/upload-artifact@v2
        with:
          name: sources-jar
          path: sources.jar
