name: Build

on:
  push:
    branches: [ feat/gh-build ] # [ main ]

jobs:
  build_x64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'corretto'
          cache: 'gradle'
      - name: Set arch variable
        id: vars
        run: echo "::set-output name=os_arch::$(uname -m)"

      - name: Build platform specific lib
        run: ./gradlew buildCryptoCpp
      - name: Upload the shared lib
        uses: actions/upload-artifact@v2
        with:
          name: lib-${{ runner.os }}-${{ steps.vars.outputs.os_arch }}
          path: crypto/build/bindings/libcrypto_jni.*

      - name: Build android's AAR
        run: ./gradlew android:build
        if: matrix.os == 'ubuntu-latest'
      - name: Rename AAR
        run: mv android/build/outputs/aar/android-release.aar starknet.aar
        if: matrix.os == 'ubuntu-latest'
      - name: Upload the AAR
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: starknet-aar
          path: starknet.aar

#  build_other_archs:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        include:
#          - arch: aarch64
#            distro: ubuntu_latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      - name: Build additional archs for linux
#        uses: uraimo/run-on-arch-action@d9e985ee32020b12e9cafe5b7d52cf0122bb7609
#        with:
#          arch: ${{ matrix.arch }}
#          distro: ${{ matrix.distro }}
#          install:
#            apt-get update && apt-get install -y openjdk-11-jdk cmake
#          run: ./gradlew buildCryptoCpp
#      - name: Upload the shared lib
#        uses: actions/upload-artifact@v2
#        with:
#          name: lib-${{ runner.os }}-${{ matrix.arch }}
#          path: crypto/build/bindings/libcrypto_jni.*
#      - name: Set arch var for packaging
#        run: echo LINUX_ARCHS="$LINUX_ARCHS ${{ matrix.arch }}" >> $GITHUB_ENV
#    outputs:
#      LINUX_ARCHS: "$LINUX_ARCHS"

  package_jar:
    runs-on: ubuntu-latest
    needs: [build_x64] #, build_other_archs]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: download
      - name: Move shared libs
        run: |
          # Mac uses a universal binary
          mkdir -p lib/build/libs/shared/darwin
          cp -r download/lib-macOS*/* lib/build/libs/shared/darwin/
          for arch in "x86_64"; do
            mkdir -p lib/build/libs/shared/linux/"$arch"
            cp -r download/lib-Linux-"$arch"/* lib/build/libs/shared/linux/"$arch"/
          done
      - name: Bundle universal JAR
        run: ./gradlew lib:jar
      - name: Rename JAR
        run: mv lib/build/libs/lib-[0-9].[0-9].[0-9].jar starknet.jar
      - name: Upload the JAR
        uses: actions/upload-artifact@v2
        with:
          name: starknet-jar
          path: starknet.jar

  generate_javadoc_and_sources:
    runs-on: ubuntu-latest
    needs: [build_x64] #, build_other_archs]
    steps:
      - uses: actions/checkout@v2
      - name: Generate javadoc JAR
        run: ./gradlew javadocJar
      - name: Generate sources JAR
        run: ./gradlew sourcesJar
      - name: Rename JARS
        run: mv lib/build/libs/lib-[0-9].[0-9].[0-9]-javadoc.jar javadoc.jar && mv lib/build/libs/lib-[0-9].[0-9].[0-9]-sources.jar sources.jar
      - name: Upload javadoc JAR
        uses: actions/upload-artifact@v2
        with:
          name: javadoc-jar
          path: javadoc.jar
      - name: Upload sources JAR
        uses: actions/upload-artifact@v2
        with:
          name: sources-jar
          path: sources.jar

  publish:
    runs-on: ubuntu-latest
    needs: [package_jar, generate_javadoc_and_sources]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          path: lib/
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'corretto'
      - name: Publish package
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: publish
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword }}
